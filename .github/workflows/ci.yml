on:
    workflow_call:
        inputs:
            project_name:
                type: string
                default: "sg-ci"
            excluded_jobs:
                type: string
                default: ""
            package_manager:
                type: string
                default: "npm"
            npm_token:
                type: string
                default: ""

jobs:

    sast:
        name: SAST Scan using semgrep
        if: ${{ !contains( inputs.exclude_jobs, 'sast' ) && (github.actor != 'dependabot[bot]') }}
        runs-on: ubuntu-latest
        permissions: write-all
        container:
            image: public.ecr.aws/u6u3h0g1/docker-nodejs-ci:1.0
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: SAST Scan
              run: |
                semgrep scan --config "p/default" --sarif > semgrep.sarif
                cat semgrep.sarif

    osv:
        name: OSV/Dependency Scan using Google OSV
        if: ${{ !contains( inputs.exclude_jobs, 'osv' ) && (github.actor != 'dependabot[bot]') }}
        runs-on: ubuntu-latest
        permissions: write-all
        container:
            image: public.ecr.aws/u6u3h0g1/docker-nodejs-ci:1.0
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: OSV Scan
              run: |
                osv-scanner --format table -r .
    
    sbom:
        name: SBOM Generator using CycloneDX
        runs-on: ubuntu-latest
        permissions: write-all
        container:
            image: public.ecr.aws/u6u3h0g1/docker-nodejs-ci:1.0
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: OSV Scan
              run: |
                cdxgen -r -o bom.json -p
              env:
                FETCH_LICENSE: true
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload Artifact
              uses: actions/upload-artifact@v2
              with:
                name: sbom
                path: bom.json